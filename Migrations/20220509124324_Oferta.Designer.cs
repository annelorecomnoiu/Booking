// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using booking.Database;

namespace booking.Migrations
{
    [DbContext(typeof(BookingContext))]
    [Migration("20220509124324_Oferta")]
    partial class Oferta
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("booking.Database.Models.Camera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Capacitate")
                        .HasColumnType("integer");

                    b.Property<bool?>("DeletedAt")
                        .HasColumnType("boolean");

                    b.Property<string>("Image1")
                        .HasColumnType("text");

                    b.Property<string>("Image2")
                        .HasColumnType("text");

                    b.Property<string>("Image3")
                        .HasColumnType("text");

                    b.Property<string>("Image4")
                        .HasColumnType("text");

                    b.Property<string>("Image5")
                        .HasColumnType("text");

                    b.Property<string>("Image6")
                        .HasColumnType("text");

                    b.Property<int>("NrCamere")
                        .HasColumnType("integer");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Pret")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Camere");
                });

            modelBuilder.Entity("booking.Database.Models.Dotare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool?>("DeletedAt")
                        .HasColumnType("boolean");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Dotari");
                });

            modelBuilder.Entity("booking.Database.Models.DotareCamera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("IdCamera")
                        .HasColumnType("integer");

                    b.Property<int>("IdDotare")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdCamera");

                    b.HasIndex("IdDotare");

                    b.ToTable("DotariCamere");
                });

            modelBuilder.Entity("booking.Database.Models.Oferta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CameraId")
                        .HasColumnType("integer");

                    b.Property<bool?>("DeletedAt")
                        .HasColumnType("boolean");

                    b.Property<int>("Pret")
                        .HasColumnType("integer");

                    b.Property<int>("ServiciuId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CameraId");

                    b.HasIndex("ServiciuId");

                    b.ToTable("Oferte");
                });

            modelBuilder.Entity("booking.Database.Models.Serviciu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool?>("DeletedAt")
                        .HasColumnType("boolean");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Pret")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Servicii");
                });

            modelBuilder.Entity("booking.Database.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool?>("DeletedAt")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("character varying");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnName("rol")
                        .HasColumnType("character varying");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasColumnType("character varying");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("booking.Database.Models.DotareCamera", b =>
                {
                    b.HasOne("booking.Database.Models.Camera", "Camera")
                        .WithMany("Dotari")
                        .HasForeignKey("IdCamera")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("booking.Database.Models.Dotare", "Dotare")
                        .WithMany("Camere")
                        .HasForeignKey("IdDotare")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("booking.Database.Models.Oferta", b =>
                {
                    b.HasOne("booking.Database.Models.Camera", "Camera")
                        .WithMany()
                        .HasForeignKey("CameraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("booking.Database.Models.Serviciu", "Serviciu")
                        .WithMany()
                        .HasForeignKey("ServiciuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
